<%- include('partials/header.ejs') %>

<main>
  <h1>Заявки</h1>
  <div class="table">
    <div class="row header">
      <div>Услуга</div>
      <div>Статус</div>
      <div>Результат</div>
      <div>Дата подачи</div>
      <div>Плановая дата выполнения</div>
      <div>Дата завершения</div>
    </div>
    
    <div id="requestsBody"></div>
  </div>
</main>

<script>

const translateStatus = status => ({
  WAITING: "На рассмотрении",
  IN_PROGRESS: "В обработке",
  DONE: "Выполнено",
  REJECTED: "Отказано",
  CANCELLED: "Отменено"
}[status] || "Неизвестно")

const formatDate = (value) => {
  if (!value) return "—"
  const d = new Date(value)
  if (isNaN(d)) return "—"
  const day = String(d.getDate()).padStart(2, "0")
  const month = String(d.getMonth() + 1).padStart(2, "0")
  const year = d.getFullYear()
  return `${day}.${month}.${year}`
}

window.addEventListener("DOMContentLoaded", () => {
  fetch("/api/user/requests")
    .then(res => {
      if (!res.ok) throw new Error(`Ошибка сети: ${res.status}`)
      return res.json()
    })
    .then(data => {
      const body = document.getElementById("requestsBody")
      body.innerHTML = ""

      data.requests.forEach(entry => {
        const { request, service } = entry

        const row = document.createElement("div")
        row.className = "row"

        const cancelButton = (request.status === "WAITING" || request.status === "IN_PROGRESS")
          ? `<button class="cancel-btn" data-id="${request.requestId}">Отменить</button>`
          : ""

        row.innerHTML = `
          <div><a href="/user/services/${service.serviceId}">${service.name}</a></div>
          <div>${translateStatus(request.status)}</div>
          <div>${request.result || "—"}</div>
          <div>${formatDate(request.dateOfSubmission)}</div>
          <div>${formatDate(request.plannedCompletionDate)}</div>
          <div>${formatDate(request.dateOfCompletion)}</div>
          <div>${cancelButton}</div>
        `

        body.appendChild(row)
      })

      document.querySelectorAll(".cancel-btn").forEach(button => {
        button.addEventListener("click", (e) => {
          const requestId = e.target.dataset.id

          fetch(`/api/user/requests/${requestId}`, {
            method: "PATCH"
          })
            .then(res => {
              if (!res.ok) throw new Error(`Ошибка: ${res.status}`)
              return res.json()
            })
            .then(() => {
              location.reload()
            })
            .catch(error => {
              alert("Ошибка отмены: " + error.message)
            })
        })
      })
    })
    .catch(error => {
      alert("Ошибка загрузки заявок: " + error.message)
    })
})


</script>